
@model IEnumerable<SurveyApp.Domain.Models.Customer>

<div class="overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
            <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Marca
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Contacto
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Servicios
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Fecha de Alta
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Acciones
                </th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
            @if (Model != null && Model.Any())
            {
                @foreach (var customer in Model)
                {
                    <tr class="hover:bg-gray-50 transition-colors duration-200">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-gray-900">@customer.BrandName</div>
                            <div class="text-xs text-gray-500">
                                @(customer.CustomerType?.ToLower() == "admin" ? "Admin" : "Cliente")
                            </div>
                        </td>
                        <td class="px-6 py-4">
                            <div class="text-sm text-gray-900">@customer.ContactName</div>
                            <div class="text-xs text-gray-500">
                                <a href="mailto:@customer.ContactEmail" class="hover:text-primary">@customer.ContactEmail</a>
                                @if (!string.IsNullOrEmpty(customer.ContactPhone))
                                {
                                    <span> | <a href="tel:@customer.ContactPhone" class="hover:text-primary">@customer.ContactPhone</a></span>
                                }
                            </div>
                        </td>
                        <td class="px-6 py-4">
                            <div class="flex flex-wrap gap-1">
                                @if (customer.AcquiredServices != null)
                                {
                                    @foreach (var service in customer.AcquiredServices.Take(3))
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">
                                            @service
                                        </span>
                                    }
                                    
                                    @if (customer.AcquiredServices.Count > 3)
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 cursor-pointer hover:bg-gray-200" 
                                              title="@string.Join(", ", customer.AcquiredServices.Skip(3))">
                                            +@(customer.AcquiredServices.Count - 3)
                                        </span>
                                    }
                                }
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            <span title="@customer.CreatedAt.ToString("dd/MM/yyyy HH:mm")">
                                @customer.CreatedAt.ToString("dd/MM/yyyy")
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <div class="flex space-x-2">
                                <a href="#" class="text-blue-600 hover:text-blue-900 transition-colors" 
                                   onclick="editCustomer('@customer.Id', '@customer.BrandName', '@customer.ContactName', '@customer.ContactEmail', '@customer.ContactPhone', '@string.Join(",", customer.AcquiredServices)', '@customer.CustomerType'); return false;">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 0L11.828 15.1.5H17.5a.5.5 0 00.5-.5v-5l-5-5z" />
                                    </svg>
                                </a>
                                <a href="#" class="text-red-600 hover:text-red-900 transition-colors" 
                                   onclick="deleteCustomer('@customer.Id', '@customer.BrandName'); return false;">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="px-6 py-10 text-center text-gray-500">
                        <div class="flex flex-col items-center justify-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                            </svg>
                            <p>No hay clientes para mostrar</p>
                            <button type="button" class="mt-3 px-4 py-2 bg-primary hover:bg-primary/80 text-white rounded-lg transition-colors" data-bs-toggle="modal" data-bs-target="#customerFormModal">
                                Agregar Cliente
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function editCustomer(id, brandName, contactName, contactEmail, contactPhone, services, customerType) {
        // Llenar el formulario con los datos del cliente
        document.getElementById('CustomerForm_Id').value = id;
        document.getElementById('CustomerForm_BrandName').value = brandName;
        document.getElementById('CustomerForm_ContactName').value = contactName;
        document.getElementById('CustomerForm_ContactEmail').value = contactEmail;
        document.getElementById('CustomerForm_ContactPhone').value = contactPhone;
        
        // Limpiar servicios anteriores
        const checkboxes = document.querySelectorAll('input[name="CustomerForm.AcquiredServices"]');
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });
        
        // Marcar los servicios adquiridos
        if (services) {
            const servicesList = services.split(',');
            servicesList.forEach(service => {
                const checkbox = document.querySelector(`input[name="CustomerForm.AcquiredServices"][value="${service.trim()}"]`);
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
        }
        
        // Establecer el tipo de cliente
        const customerTypeSelect = document.getElementById('CustomerForm_CustomerType');
        if (customerTypeSelect) {
            customerTypeSelect.value = customerType || 'client';
        }
        
        // Cambiar título del modal y texto del botón
        document.getElementById('customerFormModalTitle').textContent = 'Editar Cliente';
        document.getElementById('customerFormSubmitButton').textContent = 'Actualizar Cliente';
        
        // Mostrar el modal
        const modal = new bootstrap.Modal(document.getElementById('customerFormModal'));
        modal.show();
    }
    
    function deleteCustomer(id, brandName) {
        if (confirm(`¿Está seguro de que desea eliminar al cliente "${brandName}"? Esta acción no se puede deshacer.`)) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("Delete", "Customers")';
            
            const idInput = document.createElement('input');
            idInput.type = 'hidden';
            idInput.name = 'id';
            idInput.value = id;
            
            const antiForgeryToken = document.createElement('input');
            antiForgeryToken.type = 'hidden';
            antiForgeryToken.name = '__RequestVerificationToken';
            antiForgeryToken.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            form.appendChild(idInput);
            form.appendChild(antiForgeryToken);
            document.body.appendChild(form);
            form.submit();
        }
    }
</script>
