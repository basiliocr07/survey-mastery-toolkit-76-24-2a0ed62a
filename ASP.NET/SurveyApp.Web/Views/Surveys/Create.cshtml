@model SurveyApp.Web.Models.CreateSurveyViewModel
@{
    ViewData["Title"] = Model.Id > 0 ? "Editar Encuesta" : "Crear Encuesta";
}

<div class="container mx-auto py-6">
    <div class="flex justify-between items-center mb-8">
        <div>
            <h1 class="text-3xl font-bold">@ViewData["Title"]</h1>
            <p class="text-gray-500">Diseña tu encuesta con preguntas personalizadas</p>
        </div>
        
        <div>
            <a asp-controller="Surveys" asp-action="Index" class="btn btn-outline-secondary mr-2">Cancelar</a>
        </div>
    </div>
    
    <form id="survey-form" asp-action="Create" method="post" class="space-y-6">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Status" value="draft" />
        
        <div x-data="{ activeTab: 'content' }">
            <!-- Pestañas de navegación -->
            <div class="border-b border-gray-200 mb-6">
                <ul class="flex flex-wrap -mb-px text-sm font-medium text-center">
                    <li class="mr-2">
                        <a href="#" 
                           x-on:click.prevent="activeTab = 'content'"
                           :class="{ 'border-b-2 border-primary text-primary': activeTab === 'content' }"
                           class="inline-flex items-center p-4 hover:text-primary">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            Contenido de la Encuesta
                        </a>
                    </li>
                    <li class="mr-2">
                        <a href="#" 
                           x-on:click.prevent="activeTab = 'delivery'"
                           :class="{ 'border-b-2 border-primary text-primary': activeTab === 'delivery' }"
                           class="inline-flex items-center p-4 hover:text-primary">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                            </svg>
                            Configuración de Envío
                        </a>
                    </li>
                </ul>
            </div>
            
            <!-- Contenido de las pestañas -->
            <div x-show="activeTab === 'content'" class="space-y-6">
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h2 class="text-xl font-semibold mb-4">Detalles de la Encuesta</h2>
                    
                    <div class="mb-4">
                        <label asp-for="Title" class="block text-sm font-medium mb-1">Título <span class="text-red-500">*</span></label>
                        <input asp-for="Title" class="w-full border rounded py-2 px-3 focus:outline-none focus:ring-1 focus:ring-primary" placeholder="Ingresa el título de la encuesta" required>
                        <span asp-validation-for="Title" class="text-red-500 text-sm"></span>
                    </div>
                    
                    <div class="mb-4">
                        <label asp-for="Description" class="block text-sm font-medium mb-1">Descripción (opcional)</label>
                        <textarea asp-for="Description" class="w-full border rounded py-2 px-3 focus:outline-none focus:ring-1 focus:ring-primary h-24" placeholder="Proporciona una descripción para tu encuesta"></textarea>
                        <span asp-validation-for="Description" class="text-red-500 text-sm"></span>
                    </div>
                </div>
                
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-semibold">Preguntas</h2>
                        <button type="button" id="add-question-btn" class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-md text-sm inline-flex items-center">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            Agregar Pregunta
                        </button>
                    </div>
                    
                    <div id="questions-container" class="space-y-4">
                        @if (Model.Questions != null && Model.Questions.Count > 0)
                        {
                            @for (var i = 0; i < Model.Questions.Count; i++)
                            {
                                @await Component.InvokeAsync("QuestionBuilder", new { question = Model.Questions[i], index = i })
                            }
                        }
                        else
                        {
                            <div class="text-center py-8 bg-gray-50 rounded-lg border-2 border-dashed">
                                <svg class="w-12 h-12 text-gray-400 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                                <p class="text-gray-500 mb-3">No hay preguntas aún</p>
                                <button type="button" class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-md text-sm inline-flex items-center" onclick="SurveyBuilder.addQuestion()">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                    </svg>
                                    Agregar Primera Pregunta
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
            
            <div x-show="activeTab === 'delivery'" class="space-y-6">
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h2 class="text-xl font-semibold mb-4">Configuración de Envío</h2>
                    
                    <div x-data="{ deliveryType: '@(Model.DeliveryConfig?.Type ?? "manual")' }">
                        <h3 class="text-lg font-medium mb-3">Método de Entrega</h3>
                        
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                            <label class="block">
                                <input type="radio" name="DeliveryConfig.Type" value="manual" 
                                       x-model="deliveryType" 
                                       class="hidden">
                                <div class="border rounded-lg p-4 cursor-pointer transition-all"
                                     :class="{ 'border-primary bg-primary/5': deliveryType === 'manual' }">
                                    <div class="flex justify-between items-start mb-2">
                                        <div class="bg-primary/10 text-primary rounded-full p-2">
                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                                            </svg>
                                        </div>
                                        <div class="w-5 h-5 border rounded-full flex items-center justify-center"
                                             :class="{ 'border-primary': deliveryType === 'manual' }">
                                            <div class="w-3 h-3 rounded-full bg-primary"
                                                 x-show="deliveryType === 'manual'"></div>
                                        </div>
                                    </div>
                                    <h4 class="font-medium mb-1">Manual</h4>
                                    <p class="text-sm text-gray-500">Enviar la encuesta manualmente a correos específicos</p>
                                </div>
                            </label>
                            
                            <label class="block">
                                <input type="radio" name="DeliveryConfig.Type" value="scheduled" 
                                       x-model="deliveryType" 
                                       class="hidden">
                                <div class="border rounded-lg p-4 cursor-pointer transition-all"
                                     :class="{ 'border-primary bg-primary/5': deliveryType === 'scheduled' }">
                                    <div class="flex justify-between items-start mb-2">
                                        <div class="bg-primary/10 text-primary rounded-full p-2">
                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                            </svg>
                                        </div>
                                        <div class="w-5 h-5 border rounded-full flex items-center justify-center"
                                             :class="{ 'border-primary': deliveryType === 'scheduled' }">
                                            <div class="w-3 h-3 rounded-full bg-primary"
                                                 x-show="deliveryType === 'scheduled'"></div>
                                        </div>
                                    </div>
                                    <h4 class="font-medium mb-1">Programado</h4>
                                    <p class="text-sm text-gray-500">Programar envíos automáticos en intervalos específicos</p>
                                </div>
                            </label>
                            
                            <label class="block">
                                <input type="radio" name="DeliveryConfig.Type" value="triggered" 
                                       x-model="deliveryType" 
                                       class="hidden">
                                <div class="border rounded-lg p-4 cursor-pointer transition-all"
                                     :class="{ 'border-primary bg-primary/5': deliveryType === 'triggered' }">
                                    <div class="flex justify-between items-start mb-2">
                                        <div class="bg-primary/10 text-primary rounded-full p-2">
                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                            </svg>
                                        </div>
                                        <div class="w-5 h-5 border rounded-full flex items-center justify-center"
                                             :class="{ 'border-primary': deliveryType === 'triggered' }">
                                            <div class="w-3 h-3 rounded-full bg-primary"
                                                 x-show="deliveryType === 'triggered'"></div>
                                        </div>
                                    </div>
                                    <h4 class="font-medium mb-1">Activado</h4>
                                    <p class="text-sm text-gray-500">Enviar encuestas cuando ocurran eventos específicos</p>
                                </div>
                            </label>
                        </div>
                        
                        <!-- Correos electrónicos -->
                        <div class="border-t border-gray-200 pt-6 mt-6">
                            <h3 class="text-lg font-medium mb-3">Destinatarios de Correo Electrónico</h3>
                            
                            <div x-data="{ 
                                newEmail: '', 
                                emails: @Html.Raw(Json.Serialize(Model.DeliveryConfig?.EmailAddresses ?? new List<string>()))
                            }">
                                <div class="flex items-center mb-3">
                                    <input type="text" x-model="newEmail" 
                                           x-on:keydown.enter.prevent="if(newEmail.trim() && newEmail.includes('@')) { emails.push(newEmail.trim()); newEmail = ''; }" 
                                           class="flex-grow border rounded-l py-2 px-3 focus:outline-none focus:ring-1 focus:ring-primary" 
                                           placeholder="Agregar dirección de correo electrónico">
                                    <button type="button" 
                                            x-on:click="if(newEmail.trim() && newEmail.includes('@')) { emails.push(newEmail.trim()); newEmail = ''; }"
                                            class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-r">
                                        Agregar
                                    </button>
                                </div>
                                
                                <div x-show="emails.length > 0" class="border rounded-md p-3 bg-gray-50 max-h-60 overflow-y-auto">
                                    <template x-for="(email, index) in emails" :key="index">
                                        <div class="flex justify-between items-center py-2 px-3 mb-1 bg-white rounded shadow-sm">
                                            <span x-text="email"></span>
                                            <button type="button" x-on:click="emails.splice(index, 1)" class="text-red-500 hover:text-red-700">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                                </svg>
                                            </button>
                                        </div>
                                    </template>
                                </div>
                                
                                <div x-show="emails.length === 0" class="text-gray-500 text-sm mt-2">
                                    No se han agregado direcciones de correo electrónico
                                </div>
                                
                                <template x-for="(email, index) in emails" :key="index">
                                    <input type="hidden" :name="'DeliveryConfig.EmailAddresses['+index+']'" :value="email">
                                </template>
                            </div>
                        </div>
                        
                        <!-- Configuración Programada -->
                        <div x-show="deliveryType === 'scheduled'" class="border-t border-gray-200 pt-6 mt-6" id="scheduledSettings">
                            <h3 class="text-lg font-medium mb-3">Configuración de Programación</h3>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium mb-1">Frecuencia</label>
                                    <select name="DeliveryConfig.Schedule.Frequency" class="w-full border rounded py-2 px-3 focus:outline-none focus:ring-1 focus:ring-primary">
                                        <option value="daily" selected="@(Model.DeliveryConfig?.Schedule?.Frequency == "daily")">Diario</option>
                                        <option value="weekly" selected="@(Model.DeliveryConfig?.Schedule?.Frequency == "weekly")">Semanal</option>
                                        <option value="monthly" selected="@(Model.DeliveryConfig?.Schedule?.Frequency == "monthly" || Model.DeliveryConfig?.Schedule == null)">Mensual</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium mb-1">Hora</label>
                                    <input type="time" name="DeliveryConfig.Schedule.Time" 
                                           value="@(Model.DeliveryConfig?.Schedule?.Time ?? "09:00")" 
                                           class="w-full border rounded py-2 px-3 focus:outline-none focus:ring-1 focus:ring-primary">
                                </div>
                            </div>
                        </div>
                        
                        <!-- Configuración Activada -->
                        <div x-show="deliveryType === 'triggered'" class="border-t border-gray-200 pt-6 mt-6" id="triggerSettings">
                            <h3 class="text-lg font-medium mb-3">Configuración de Activación</h3>
                            
                            <div class="mb-4">
                                <label class="block text-sm font-medium mb-2">Evento de Activación</label>
                                <div class="space-y-2">
                                    <label class="flex items-center">
                                        <input type="radio" name="DeliveryConfig.Trigger.Type" value="ticket-closed" 
                                               checked="@(Model.DeliveryConfig?.Trigger?.Type == "ticket-closed" || Model.DeliveryConfig?.Trigger == null)"
                                               class="mr-2">
                                        <span>Cuando se cierra un ticket</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="radio" name="DeliveryConfig.Trigger.Type" value="purchase-completed" 
                                               checked="@(Model.DeliveryConfig?.Trigger?.Type == "purchase-completed")"
                                               class="mr-2">
                                        <span>Después de completar una compra</span>
                                    </label>
                                </div>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium mb-1">Retraso (horas)</label>
                                    <input type="number" name="DeliveryConfig.Trigger.DelayHours" 
                                           value="@(Model.DeliveryConfig?.Trigger?.DelayHours ?? 24)" 
                                           min="0" max="168"
                                           class="w-full border rounded py-2 px-3 focus:outline-none focus:ring-1 focus:ring-primary">
                                </div>
                                
                                <div class="flex items-center">
                                    <label class="inline-flex items-center">
                                        <input type="checkbox" name="DeliveryConfig.Trigger.SendAutomatically" 
                                               value="true" 
                                               checked="@(Model.DeliveryConfig?.Trigger?.SendAutomatically ?? false)"
                                               class="mr-2">
                                        <span>Enviar automáticamente</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="mt-6 text-right">
                <button type="button" x-on:click="activeTab = 'content'" 
                        x-show="activeTab === 'delivery'"
                        class="bg-white border border-gray-300 hover:bg-gray-50 text-gray-700 px-4 py-2 rounded-md mr-2">
                    Anterior
                </button>
                <button type="button" x-on:click="activeTab = 'delivery'" 
                        x-show="activeTab === 'content'"
                        class="bg-white border border-gray-300 hover:bg-gray-50 text-gray-700 px-4 py-2 rounded-md mr-2">
                    Siguiente
                </button>
                <button type="submit" class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-md">
                    @(Model.Id > 0 ? "Actualizar" : "Crear") Encuesta
                </button>
            </div>
        </div>
    </form>
</div>

<!-- Template para nuevas preguntas -->
<template id="question-template">
    @await Component.InvokeAsync("QuestionBuilder", new { 
        question = new SurveyApp.Web.Models.QuestionViewModel
        { 
            Id = "new-" + Guid.NewGuid().ToString(), 
            Text = "Nueva pregunta", 
            Type = "text", 
            Required = true 
        }, 
        index = 0 
    })
</template>

@section Scripts {
    <script src="~/js/survey-builder.js" asp-append-version="true"></script>
}
