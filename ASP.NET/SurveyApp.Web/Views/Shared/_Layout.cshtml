
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Survey App</title>

    <!-- Fuentes -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700;900&family=Inter:wght@100..900&display=swap" rel="stylesheet">

    <!-- Iconos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

    <!-- Estilos -->
    <link rel="stylesheet" href="~/css/tailwind_custom.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/surveys.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/questions.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/survey-builder.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/survey-create.css" asp-append-version="true" />

    <!-- Asegurarse de que Tailwind se cargue correctamente -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <style>
        /* Estilos críticos en línea */
        body {
            background-color: hsl(210, 40%, 98%);
            color: hsl(222.2, 84%, 4.9%);
            font-family: 'Lato', 'Inter', sans-serif;
        }
        .btn-primary {
            background-color: #009874;
            color: hsl(210, 40%, 98%);
        }

        .btn-secundary {
            background-color: hsl(215, 25%, 27%);
            color: hsl(210, 40%, 98%);
        }
        .text-primary {
            color: hsl(215, 25%, 27%);
        }
        .bg-primary {
            background-color: hsl(215, 25%, 27%);
        }
        .border-primary {
            border-color: hsl(215, 25%, 27%);
        }

        /* Animaciones adaptadas del navbar de React */
        .glass {
            background: rgba(255, 255, 255, 0.65);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }

        .nav-link {
            transition: all 0.2s ease;
            position: relative;
        }

        .nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: hsl(215, 25%, 27%);
            transform: scaleX(0);
            transform-origin: right center;
            transition: transform 0.3s ease;
        }

        .nav-link:hover::after,
        .nav-link.active::after {
            transform: scaleX(1);
            transform-origin: left center;
        }

        .nav-link-mobile {
            transition: all 0.3s ease;
        }

        .nav-link-mobile:hover,
        .nav-link-mobile.active {
            background-color: rgba(0, 0, 0, 0.05);
            padding-left: 1rem;
        }

        /* Use CSS keyframes for animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(10px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes slideDown {
            from { transform: translateY(-10px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes pulseSlow {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }

        .animate-fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }

        .animate-slide-up {
            animation: slideUp 0.4s ease-out forwards;
        }

        .animate-slide-down {
            animation: slideDown 0.4s ease-out forwards;
        }

        .animate-pulse-slow {
            animation: pulseSlow 3s infinite;
        }

        .animate-fade-out {
            animation: fadeIn 0.3s ease-out forwards reverse;
        }

        .mobile-menu-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 40;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }

        .mobile-menu-overlay.show {
            opacity: 1;
            visibility: visible;
        }

        .mobile-menu {
            transform: translateX(100%);
            transition: transform 0.3s ease;
        }

        .mobile-menu.show {
            transform: translateX(0);
        }
    </style>
</head>
<body class="bg-background text-foreground font-sans min-h-screen flex flex-col">
    <header class="animate-fade-in">
        <nav class="bg-black shadow-sm fixed w-full top-0 z-50 transition-all duration-300">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between h-16">
                    <div class="flex">
                        <div class="flex-shrink-0 flex items-center">
                            <a asp-controller="Home" asp-action="Index" class="text-2xl font-bold text-secondary  transition-all duration-200 hover:opacity-80">
                                <i class=""></i>execudata
                            </a>
                        </div>
                        <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
                            <a asp-controller="Home" asp-action="Index" class="nav-link border-primary text-secondary  inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Home" ? "active" : "")">
                                <i class="fas fa-home mr-1"></i> Inicio
                            </a>
                            <a asp-controller="Dashboard" asp-action="Index" class="nav-link border-transparent text-secondary hover:text-primary inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Survey" ? "active" : "")">
                                <i class="fas fa-file-alt mr-1"></i> Dashboard
                            </a>
                            <a asp-controller="Survey" asp-action="Index" class="nav-link border-transparent text-secondary hover:text-primary inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Survey" ? "active" : "")">
                                <i class="fas fa-file-alt mr-1"></i> Encuestas
                            </a>
                            <a asp-controller="Analytics" asp-action="Index" class="nav-link border-transparent text-secondary hover:text-primary inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Analytics" ? "active" : "")">
                                <i class="fas fa-chart-line mr-1"></i> Analisis
                            </a>
                            <a asp-controller="Suggestions" asp-action="Index" class="nav-link border-transparent text-secondary hover:text-primary inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Suggestions" ? "active" : "")">
                                <i class="fas fa-lightbulb mr-1"></i> Sugerencias
                            </a>
                            <a asp-controller="Customers" asp-action="Index" class="nav-link border-transparent text-secondary hover:text-primary inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Customers" ? "active" : "")">
                                <i class="fas fa-users mr-1"></i> Clientes
                            </a>
                            <!--<a asp-controller="KnowledgeBase" asp-action="Index" class="nav-link border-transparent text-secondary hover:text-primary inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "KnowledgeBase" ? "active" : "")">
                                <i class="fas fa-book mr-1"></i> Base de Conocimiento
                            </a>-->
                        </div>
                    </div>
                    <div class="hidden sm:ml-6 sm:flex sm:items-center">
                        <button type="button" class="bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-colors hover:scale-110">
                            <span class="sr-only">View notifications</span>
                            <i class="fas fa-bell"></i>
                        </button>

                        <!-- Profile dropdown -->
                        <div class="ml-3 relative">
                            <div>
                                <button type="button" class="bg-white flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary hover:scale-105 transition-transform">
                                    <span class="sr-only">Open user menu</span>
                                    <div class="h-8 w-8 rounded-full bg-primary flex items-center justify-center text-white">
                                        <i class="fas fa-user-circle"></i>
                                    </div>
                                    <span class="ml-2 text-secondary">Usuario</span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="-mr-2 flex items-center sm:hidden">
                        <!-- Mobile menu button -->
                        <button id="mobile-menu-button" type="button" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary transition-all">
                            <span class="sr-only">Open main menu</span>
                            <i class="fas fa-bars"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Mobile menu, show/hide based on menu state. -->
            <div id="mobile-menu" class="sm:hidden hidden mobile-menu">
                <div class="pt-2 pb-3 space-y-1">
                    <a asp-controller="Home" asp-action="Index" class="nav-link-mobile bg-primary/10 border-primary text-primary block pl-3 pr-4 py-2 border-l-4 text-base font-medium @(ViewContext.RouteData.Values["Controller"].ToString() == "Home" ? "active" : "")">
                        <i class="fas fa-home mr-1"></i> Home
                    </a>
                    <a asp-controller="Survey" asp-action="Index" class="nav-link-mobile border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium transition-colors @(ViewContext.RouteData.Values["Controller"].ToString() == "Survey" ? "active" : "")">
                        <i class="fas fa-file-alt mr-1"></i> Surveys
                    </a>
                    <a asp-controller="Analytics" asp-action="Index" class="nav-link-mobile border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium transition-colors @(ViewContext.RouteData.Values["Controller"].ToString() == "Analytics" ? "active" : "")">
                        <i class="fas fa-chart-line mr-1"></i> Analytics
                    </a>
                    <a asp-controller="Suggestions" asp-action="Index" class="nav-link-mobile border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium transition-colors @(ViewContext.RouteData.Values["Controller"].ToString() == "Suggestions" ? "active" : "")">
                        <i class="fas fa-lightbulb mr-1"></i> Suggestions
                    </a>
                    <a asp-controller="Customers" asp-action="Index" class="nav-link-mobile border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium transition-colors @(ViewContext.RouteData.Values["Controller"].ToString() == "Customers" ? "active" : "")">
                        <i class="fas fa-users mr-1"></i> Customers
                    </a>
                    <!-- <a asp-controller="KnowledgeBase" asp-action="Index" class="nav-link-mobile border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium transition-colors @(ViewContext.RouteData.Values["Controller"].ToString() == "KnowledgeBase" ? "active" : "")">
                         <i class="fas fa-book mr-1"></i> Knowledge Base
                     </a> -->
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="pt-20 pb-3 flex-grow">
        @{
            var isHomePage = ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" &&
            ViewContext.RouteData.Values["Action"]?.ToString() == "Index";
        }

        @if (isHomePage)
        {
            <div class="w-full">
                @RenderBody()
            </div>
        }
        else
        {
            <div class="flex justify-center">
                <div class="w-[900px] max-w-[900px] h-full bg-white p-1 py-8">
                    @RenderBody()
                </div>
            </div>
        }
    </main>

    <footer class="border-t border-gray-200 bg-black mt-auto animate-fade-in">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-6">
                <div class="flex items-center space-x-2">
                    <p class="text-sm text-gray-500">&copy; 2023 - SurveyApp - <a asp-controller="Home" asp-action="Privacy" class="text-primary hover:underline transition-colors">Privacy</a></p>
                </div>
                <div class="flex space-x-4">
                    <a href="#" class="text-gray-400 hover:text-gray-500 transition-colors hover:scale-110">
                        <i class="fab fa-twitter"></i>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-gray-500 transition-colors hover:scale-110">
                        <i class="fab fa-facebook"></i>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-gray-500 transition-colors hover:scale-110">
                        <i class="fab fa-instagram"></i>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-gray-500 transition-colors hover:scale-110">
                        <i class="fab fa-github"></i>
                    </a>
                    <a href="https://linkedin.com" target="_blank" class="text-white text-xl hover:text-blue-600">
                        <i class="fab fa-linkedin"></i>
                    </a>
                </div>
            </div>
        </div>
    </footer>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Mobile menu toggle with animation
        document.getElementById('mobile-menu-button').addEventListener('click', function() {
            const mobileMenu = document.getElementById('mobile-menu');

            if (mobileMenu.classList.contains('hidden')) {
                // Show the menu
                mobileMenu.classList.remove('hidden');

                // Add overlay
                const overlay = document.createElement('div');
                overlay.className = 'mobile-menu-overlay';
                document.body.appendChild(overlay);

                // Trigger animation
                setTimeout(() => {
                    mobileMenu.classList.add('show');
                    overlay.classList.add('show');
                }, 10);

                // Register click outside to close
                overlay.addEventListener('click', closeMenu);
            } else {
                closeMenu();
            }

            function closeMenu() {
                const mobileMenu = document.getElementById('mobile-menu');
                const overlay = document.querySelector('.mobile-menu-overlay');

                if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
                    mobileMenu.classList.remove('show');
                    if (overlay) overlay.classList.remove('show');

                    // After animation completes
                    setTimeout(() => {
                        mobileMenu.classList.add('hidden');
                        if (overlay) overlay.remove();
                    }, 300);
                }
            }
        });

        // Add scroll effect to navbar
        window.addEventListener('scroll', function() {
            const header = document.querySelector('header nav');
            if (window.scrollY > 10) {
                header.classList.add('glass');
                header.classList.add('shadow');
            } else {
                header.classList.remove('glass');
                header.classList.remove('shadow');
            }
        });

        // Toast notification system
        function showToast(message, type = 'info', duration = 5000) {
            // Remove existing toasts
            const existingToasts = document.querySelectorAll('.toast');
            existingToasts.forEach(toast => toast.remove());

            // Create toast
            const toast = document.createElement('div');
            toast.className = `toast toast-${type} fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 animate-slide-up`;

            // Set icon based on type
            let icon = 'info-circle';
            if (type === 'success') icon = 'check-circle';
            if (type === 'error') icon = 'exclamation-circle';
            if (type === 'warning') icon = 'exclamation-triangle';

            toast.innerHTML = `
                <div class="flex items-center">
                    <i class="fas fa-${icon} mr-2"></i>
                    <span>${message}</span>
                </div>
                <button class="absolute top-2 right-2 text-xs opacity-70 hover:opacity-100">&times;</button>
            `;

            document.body.appendChild(toast);

            // Add dismiss button functionality
            toast.querySelector('button').addEventListener('click', () => {
                toast.classList.add('animate-fade-out');
                setTimeout(() => toast.remove(), 300);
            });

            // Auto dismiss
            setTimeout(() => {
                if (document.body.contains(toast)) {
                    toast.classList.add('animate-fade-out');
                    setTimeout(() => toast.remove(), 300);
                }
            }, duration);
        }

            // Check for success or error messages in TempData
            document.addEventListener('DOMContentLoaded', function() {
                @if (TempData["SuccessMessage"] != null)
                {
                    <text>
                            showToast('@TempData["SuccessMessage"]', 'success');
                    </text>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <text>
                            showToast('@TempData["ErrorMessage"]', 'error');
                    </text>
                }
            });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
