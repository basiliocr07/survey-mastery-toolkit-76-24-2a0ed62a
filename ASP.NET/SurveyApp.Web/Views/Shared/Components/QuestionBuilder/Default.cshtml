
@model SurveyApp.Web.ViewComponents.QuestionBuilderViewModel

<div class="question-card w-full transition-all duration-300 mb-4 border shadow-sm" data-question-id="@Model.Question.Id" data-question-index="@Model.Index">
    <div class="flex items-center px-4 py-3 border-b bg-muted/30">
        <div class="mr-2 text-muted-foreground">
            <span class="cursor-grab draggable-handle">
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16"></path>
                </svg>
            </span>
        </div>
        <button 
            type="button" 
            class="toggle-question-btn p-0 h-auto mr-2 bg-transparent border-none"
        >
            <svg class="h-4 w-4 toggle-icon-down" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
            <svg class="h-4 w-4 toggle-icon-up hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7"></path>
            </svg>
        </button>
        <div class="flex-1 font-medium truncate">
            <span class="question-title">@(string.IsNullOrEmpty(Model.Question.Title) ? "Untitled Question" : Model.Question.Title)</span>
        </div>
        <div class="flex items-center gap-1">
            @if (!Model.IsFirst)
            {
                <button type="button" class="move-up-btn h-8 w-8 bg-transparent border-none rounded-md hover:bg-gray-100">
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7"></path>
                    </svg>
                </button>
            }
            @if (!Model.IsLast)
            {
                <button type="button" class="move-down-btn h-8 w-8 bg-transparent border-none rounded-md hover:bg-gray-100">
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
            }
            <button 
                type="button" 
                class="delete-question-btn h-8 w-8 text-muted-foreground hover:text-destructive bg-transparent border-none rounded-md hover:bg-gray-100"
            >
                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                </svg>
            </button>
        </div>
    </div>
    
    <div class="question-content p-4 space-y-4 animate-slide-down">
        <div class="space-y-2">
            <div>
                <label for="question-@(Model.Question.Id)-title" class="block text-sm font-medium mb-1">Question</label>
                <input 
                    type="text" 
                    id="question-@(Model.Question.Id)-title" 
                    name="Questions[@Model.Index].Title"
                    class="question-title-input w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-primary"
                    value="@Model.Question.Title" 
                    placeholder="Enter your question"
                />
                <input type="hidden" name="Questions[@Model.Index].Id" value="@Model.Question.Id" />
                <input type="hidden" name="Questions[@Model.Index].Type" value="@Model.Question.Type" class="question-type-input" />
            </div>
            
            <div>
                <label for="question-@(Model.Question.Id)-description" class="block text-sm font-medium mb-1">Description (optional)</label>
                <textarea 
                    id="question-@(Model.Question.Id)-description" 
                    name="Questions[@Model.Index].Description"
                    class="question-description-input w-full border rounded-md py-2 px-3 min-h-[80px] focus:outline-none focus:ring-2 focus:ring-primary"
                    placeholder="Add a description to provide more context"
                >@Model.Question.Description</textarea>
            </div>
        </div>

        <div>
            <div class="relative w-full">
                <button type="button" class="question-type-toggle w-full justify-between border rounded-md py-2 px-3 flex items-center bg-white hover:bg-gray-50">
                    <span>Question Type: <span class="font-medium question-type-label">@Model.Question.Type.Replace("-", " ")</span></span>
                    <svg class="w-4 h-4 transition-transform question-type-chevron" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
                
                <div class="question-type-dropdown mt-3 p-3 border rounded-md hidden animate-fade-in absolute z-10 bg-white w-full shadow-md">
                    <div class="grid grid-cols-2 gap-2">
                        <div class="question-type-option @(Model.Question.Type == "text" ? "selected" : "")" data-type="text">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                </svg>
                                <span>Text</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "paragraph" ? "selected" : "")" data-type="paragraph">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7"></path>
                                </svg>
                                <span>Paragraph</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "multiple-choice" ? "selected" : "")" data-type="multiple-choice">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <span>Multiple Choice</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "single-choice" ? "selected" : "")" data-type="single-choice">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                <span>Single Choice</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "dropdown" ? "selected" : "")" data-type="dropdown">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                </svg>
                                <span>Dropdown</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "rating" ? "selected" : "")" data-type="rating">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                                </svg>
                                <span>Rating</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "nps" ? "selected" : "")" data-type="nps">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                                </svg>
                                <span>NPS</span>
                            </div>
                        </div>
                        <div class="question-type-option @(Model.Question.Type == "date" ? "selected" : "")" data-type="date">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                <span>Date</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (new[] {"multiple-choice", "single-choice", "dropdown", "ranking"}.Contains(Model.Question.Type))
        {
            <div class="question-options-container space-y-3 mt-4">
                <label class="block text-sm font-medium mb-1">Options</label>
                <div class="options-list">
                    @for (var i = 0; i < (Model.Question.Options?.Count ?? 0); i++)
                    {
                        <div class="option-item flex items-center gap-2 mb-2">
                            <div class="flex-1">
                                <input 
                                    type="text" 
                                    class="option-input w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-primary" 
                                    name="Questions[@Model.Index].Options[@i]"
                                    value="@(Model.Question.Options != null && i < Model.Question.Options.Count ? Model.Question.Options[i] : "")" 
                                    placeholder="Option @(i + 1)"
                                    data-option-index="@i" 
                                    data-question-index="@Model.Index"
                                />
                            </div>
                            <button 
                                type="button" 
                                class="remove-option-btn h-9 w-9 text-muted-foreground hover:text-destructive bg-transparent border-none rounded-md hover:bg-gray-100" 
                                @(Model.Question.Options == null || Model.Question.Options.Count <= 2 ? "disabled" : "")
                                data-option-index="@i" 
                                data-question-index="@Model.Index"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                            </button>
                        </div>
                    }
                </div>
                <button 
                    type="button" 
                    class="add-option-btn mt-2 py-1 px-3 bg-transparent border border-primary text-primary rounded-md hover:bg-primary/5 text-sm inline-flex items-center"
                    data-question-index="@Model.Index"
                >
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Add Option
                </button>
            </div>
        }
        
        @if (Model.Question.Type == "rating")
        {
            <div class="mt-4 border rounded-md p-4 bg-muted/20">
                <label class="mb-2 block text-sm font-medium">Preview</label>
                <div class="star-rating flex items-center justify-center gap-2">
                    @for (var i = 1; i <= 5; i++)
                    {
                        <div class="text-center">
                            <label class="cursor-pointer block">
                                <svg 
                                    class="w-10 h-10 @(i <= 3 ? "text-yellow-400 fill-yellow-400" : "text-gray-300")"
                                    fill="currentColor"
                                    viewBox="0 0 20 20"
                                >
                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                </svg>
                            </label>
                        </div>
                    }
                </div>
            </div>
        }
        
        @if (Model.Question.Type == "nps")
        {
            <div class="mt-4 border rounded-md p-4 bg-muted/20">
                <label class="mb-2 block text-sm font-medium">Preview</label>
                <div class="grid grid-cols-11 gap-1 w-full">
                    @for (var i = 0; i <= 10; i++)
                    {
                        <div class="text-center">
                            <label
                              class="flex items-center justify-center h-10 rounded-md cursor-pointer border transition-all
                                @(i == 7 ? "bg-primary text-white border-primary" : "bg-white hover:bg-gray-100 border-gray-300")"
                            >
                                @i
                            </label>
                        </div>
                    }
                </div>
                <div class="flex justify-between text-sm text-muted-foreground px-1 mt-2">
                    <div>Not likely</div>
                    <div>Neutral</div>
                    <div>Very likely</div>
                </div>
            </div>
        }

        <div class="flex items-center space-x-2 pt-2">
            <div class="relative inline-flex items-center">
                <input 
                    type="checkbox" 
                    id="question-@(Model.Question.Id)-required" 
                    name="Questions[@Model.Index].Required"
                    class="question-required-toggle sr-only"
                    value="true"
                    @(Model.Question.Required ? "checked" : "")
                />
                <label 
                    for="question-@(Model.Question.Id)-required" 
                    class="bg-gray-200 cursor-pointer relative w-10 h-5 rounded-full flex items-center transition-colors duration-200 ease-in-out
                           @(Model.Question.Required ? "bg-primary" : "")"
                >
                    <span 
                        class="inline-block w-4 h-4 transform translate-x-0.5 rounded-full bg-white transition-transform duration-200 ease-in-out
                               @(Model.Question.Required ? "translate-x-5" : "")"
                    ></span>
                </label>
            </div>
            <label for="question-@(Model.Question.Id)-required" class="text-sm cursor-pointer">Required question</label>
        </div>
    </div>
</div>
