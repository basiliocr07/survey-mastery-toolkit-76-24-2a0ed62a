
@model QuestionViewModel
@{
    var index = (int)ViewData["QuestionIndex"];
    var total = (int)ViewData["TotalQuestions"];
    var isFirst = (bool)ViewData["IsFirst"];
    var isLast = (bool)ViewData["IsLast"];
}

<div class="question-card shadow-sm mb-4" data-question-index="@index">
    <div class="flex items-center px-4 py-3 border-b bg-muted/30">
        <div class="mr-2 text-muted-foreground cursor-grab draggable-handle">
            <i class="fas fa-grip-vertical"></i>
        </div>
        <button type="button" class="toggle-question-btn p-0 h-auto mr-2 bg-transparent border-0">
            <i class="fas fa-chevron-up h-4 w-4"></i>
        </button>
        <div class="flex-1 font-medium truncate question-title-display">
            @(string.IsNullOrEmpty(Model.Text) ? "Untitled Question" : Model.Text)
        </div>
        <div class="flex items-center gap-1">
            @if (!isFirst)
            {
                <button type="button" class="btn btn-ghost btn-icon h-8 w-8 move-up-btn">
                    <i class="fas fa-chevron-up"></i>
                </button>
            }
            @if (!isLast)
            {
                <button type="button" class="btn btn-ghost btn-icon h-8 w-8 move-down-btn">
                    <i class="fas fa-chevron-down"></i>
                </button>
            }
            <button type="button" class="btn btn-ghost btn-icon h-8 w-8 text-muted-foreground hover:text-danger delete-question-btn">
                <i class="fas fa-trash-alt"></i>
            </button>
        </div>
    </div>

    <div class="question-content p-4 space-y-4">
        <input type="hidden" name="Questions[@index].Id" value="@Model.Id" />
        
        <div class="space-y-2">
            <div>
                <label for="question-@index-title" class="form-label">Question</label>
                <input type="text" id="question-@index-title" name="Questions[@index].Text" value="@Model.Text"
                       class="form-control question-title-input" placeholder="Enter your question" />
            </div>
            
            <div>
                <label for="question-@index-description" class="form-label">Description (optional)</label>
                <textarea id="question-@index-description" name="Questions[@index].Description" 
                          class="form-control" placeholder="Add a description to provide more context" rows="2">@Model.Description</textarea>
            </div>
        </div>

        <div>
            <button type="button" class="question-type-toggle btn btn-outline w-full justify-between">
                <span>Question Type: <span class="font-medium question-type-display">@Model.Type.Replace("-", " ")</span></span>
                <i class="fas fa-chevron-down transition-transform"></i>
            </button>
            
            <div class="question-types-dropdown mt-3 p-3 border rounded-md hidden">
                <div class="question-type-grid">
                    <div class="question-type-option @(Model.Type == "multiple-choice" ? "selected" : "")" data-type="multiple-choice">
                        <input type="radio" name="Questions[@index].Type" value="multiple-choice" class="sr-only" @(Model.Type == "multiple-choice" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-check-square"></i>
                        </div>
                        <div class="question-type-name">Multiple Choice</div>
                        <div class="question-type-desc">Allow multiple selections</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "single-choice" ? "selected" : "")" data-type="single-choice">
                        <input type="radio" name="Questions[@index].Type" value="single-choice" class="sr-only" @(Model.Type == "single-choice" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-circle"></i>
                        </div>
                        <div class="question-type-name">Single Choice</div>
                        <div class="question-type-desc">Allow one selection only</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "text" ? "selected" : "")" data-type="text">
                        <input type="radio" name="Questions[@index].Type" value="text" class="sr-only" @(Model.Type == "text" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-align-left"></i>
                        </div>
                        <div class="question-type-name">Text Input</div>
                        <div class="question-type-desc">Collect open-ended responses</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "rating" ? "selected" : "")" data-type="rating">
                        <input type="radio" name="Questions[@index].Type" value="rating" class="sr-only" @(Model.Type == "rating" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-star"></i>
                        </div>
                        <div class="question-type-name">Rating Scale</div>
                        <div class="question-type-desc">Collect feedback with stars</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "dropdown" ? "selected" : "")" data-type="dropdown">
                        <input type="radio" name="Questions[@index].Type" value="dropdown" class="sr-only" @(Model.Type == "dropdown" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                        <div class="question-type-name">Dropdown</div>
                        <div class="question-type-desc">Selection from a dropdown</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "matrix" ? "selected" : "")" data-type="matrix">
                        <input type="radio" name="Questions[@index].Type" value="matrix" class="sr-only" @(Model.Type == "matrix" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-th"></i>
                        </div>
                        <div class="question-type-name">Matrix / Likert</div>
                        <div class="question-type-desc">Multiple criteria rating</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "ranking" ? "selected" : "")" data-type="ranking">
                        <input type="radio" name="Questions[@index].Type" value="ranking" class="sr-only" @(Model.Type == "ranking" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-sort"></i>
                        </div>
                        <div class="question-type-name">Ranking</div>
                        <div class="question-type-desc">Order items by preference</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "nps" ? "selected" : "")" data-type="nps">
                        <input type="radio" name="Questions[@index].Type" value="nps" class="sr-only" @(Model.Type == "nps" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="question-type-name">NPS Score</div>
                        <div class="question-type-desc">Net Promoter Score (0-10)</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "date" ? "selected" : "")" data-type="date">
                        <input type="radio" name="Questions[@index].Type" value="date" class="sr-only" @(Model.Type == "date" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-calendar"></i>
                        </div>
                        <div class="question-type-name">Date</div>
                        <div class="question-type-desc">Collect date information</div>
                    </div>
                    
                    <div class="question-type-option @(Model.Type == "file-upload" ? "selected" : "")" data-type="file-upload">
                        <input type="radio" name="Questions[@index].Type" value="file-upload" class="sr-only" @(Model.Type == "file-upload" ? "checked" : "") />
                        <div class="question-type-icon">
                            <i class="fas fa-upload"></i>
                        </div>
                        <div class="question-type-name">File Upload</div>
                        <div class="question-type-desc">Allow file uploads</div>
                    </div>
                </div>
                
                <input type="hidden" class="current-question-type" value="@Model.Type" />
            </div>
        </div>

        <div class="question-options-container @((Model.Type == "multiple-choice" || Model.Type == "single-choice" || Model.Type == "dropdown" || Model.Type == "ranking") ? "" : "hidden")">
            <label class="form-label">Options</label>
            @if (Model.Options != null)
            {
                for (var i = 0; i < Model.Options.Count; i++)
                {
                    <div class="option-item flex items-center gap-2 mb-2">
                        <div class="flex-1">
                            <input type="text" name="Questions[@index].Options[@i]" value="@Model.Options[i]"
                                   class="form-control" placeholder="Option @(i + 1)" />
                        </div>
                        <button type="button" class="remove-option-btn text-muted hover:text-danger p-1 rounded">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>
                }
            }
            <button type="button" class="add-option-btn">
                <i class="fas fa-plus mr-1"></i> Add Option
            </button>
        </div>

        <div class="question-preview-container @((Model.Type == "rating" || Model.Type == "nps") ? "" : "hidden")">
            <label class="form-label">Preview</label>
            @if (Model.Type == "rating")
            {
                <div class="star-rating-preview">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <svg class="@(i <= 3 ? "filled" : "")" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                        </svg>
                    }
                </div>
                
                <input type="hidden" name="Questions[@index].Settings.Min" value="1" />
                <input type="hidden" name="Questions[@index].Settings.Max" value="5" />
            }
            else if (Model.Type == "nps")
            {
                <div class="nps-rating-preview">
                    <div class="nps-grid">
                        @for (int i = 0; i <= 10; i++)
                        {
                            <div class="nps-option @(i == 7 ? "selected" : "")">
                                @i
                            </div>
                        }
                    </div>
                    <div class="nps-labels">
                        <div>Not likely</div>
                        <div>Neutral</div>
                        <div>Very likely</div>
                    </div>
                </div>
                
                <input type="hidden" name="Questions[@index].Settings.Min" value="0" />
                <input type="hidden" name="Questions[@index].Settings.Max" value="10" />
            }
        </div>

        <div class="flex items-center pt-2">
            <div class="form-check form-switch">
                <input type="checkbox" class="form-check-input question-required-toggle" id="Questions[@index].Required" 
                       name="Questions[@index].Required" value="true" @(Model.Required ? "checked" : "") />
                <label class="form-check-label" for="Questions[@index].Required">Required question</label>
            </div>
        </div>
    </div>
</div>
